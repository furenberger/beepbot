{"version":3,"sources":["../src/errors.js"],"names":["ConnectionError","event","code","value","reason","AuthorizationError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AAEA;;;IAGaA,e,WAAAA,e;;;;;;;;;;;AACX;;;;4BAIkB;AAAA,UAAZC,KAAY,uEAAJ,EAAI;;AAChB,sCAAwB,IAAxB,EAA8B;AAC5BC,cAAM;AACJC,iBAAOF,MAAMC;AADT,SADsB;AAI5BE,gBAAQ;AACND,iBAAOF,MAAMG;AADP;AAJoB,OAA9B;;AASA,aAAOH,MAAMG,MAAb;AACD;;;;;AAGH;;;AA7BA;;;;;IAgCaC,kB,WAAAA,kB;;;;;;;;;EAA2BL,e","file":"errors.js","sourcesContent":["/**!\n *\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Exception} from '@ciscospark/common';\n\n/**\n * Exception thrown when a websocket gets closed\n */\nexport class ConnectionError extends Exception {\n  /**\n   * @param {CloseEvent} event\n   * @returns {string}\n   */\n  parse(event = {}) {\n    Object.defineProperties(this, {\n      code: {\n        value: event.code\n      },\n      reason: {\n        value: event.reason\n      }\n    });\n\n    return event.reason;\n  }\n}\n\n/**\n * Exception thrown when a websocket gets closed for auth reasons\n */\nexport class AuthorizationError extends ConnectionError {}\n"]}